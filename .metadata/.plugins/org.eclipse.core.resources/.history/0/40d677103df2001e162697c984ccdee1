package com.doctorservice.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.doctorservice.model.Doctor;
import com.doctorservice.model.DoctorWrapper;
import com.doctorservice.repository.DoctorRepository;
import com.doctorservice.service.DoctorService;
import com.vitacure.doctorservice.util.DoctorUtil;

/**
 * 
 * @author Kritidipta Ghosh
 *
 */

@Service
public class DoctorServiceImpl implements DoctorService{
	
	@Autowired
	private DoctorRepository docRepo;

	 @Override
	public DoctorWrapper getDoctorById(int doctorId) {
		 
		Doctor doctor = docRepo.findById(doctorId).orElse(null);
		
		if(doctor == null) 
			return null;
		
		return DoctorUtil.convertDoctorToDoctorWrapper(doctor);
	}
	 
	 @Override
	public DoctorWrapper addDoctor(Doctor doctor) {
		return DoctorUtil.convertDoctorToDoctorWrapper(docRepo.save(doctor));
	}
	 
	 @Override
	public List<DoctorWrapper> getAllDoctors() {
		List<Doctor> docList = docRepo.findAll();
		
		if(docList.isEmpty()) {
			return null;
		}
		return DoctorUtil.convertDoctorListToDoctorWrapperList(docList);
	}
	 
	 @Override
	public DoctorWrapper updateDoctor(Doctor doctor) {
		 
		Doctor existingDoctor = docRepo.findById(doctor.getDoctorId()).orElse(null);
		
		if(existingDoctor != null) {
			return DoctorUtil.convertDoctorToDoctorWrapper(docRepo.save(doctor));
		}
		return null;
	}
	 
	 @Override
	public List<DoctorWrapper> getAllDoctorsBySpecialization(String specs) {
		 
		List<Doctor> docList = docRepo.findAllBySpecialization(specs);
		
		return DoctorUtil.convertDoctorListToDoctorWrapperList(docList);
	}
}


